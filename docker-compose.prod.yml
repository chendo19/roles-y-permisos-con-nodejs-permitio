
services:
  mongo:
    image: mongo:7.0.12
    restart: unless-stopped
    volumes:
      - mongo_data:/data/db
    networks:
      - express-permit

  api:
    env_file:
      - .env
    build:
      context: ./api
      dockerfile: ../docker/api/Dockerfile #Affected by context? yes
      args:
        - NODE_ENV=${NODE_ENV:-'production'}
    restart: always
    volumes: #volumes: Always Uses Host Paths, Affected by context? no
      - ./api:/app
      - /app/node_modules # for persistent node_modules, this ignores local node_modules and usess the one from the container
    working_dir: /app
    environment:
      - NODE_ENV=${NODE_ENV:-'production'}
    ports:
      - 5050:5050
    networks:
      - express-permit
    depends_on:
      - mongo

  frontend:
    env_file:
      - .env
    build:
      context: ./frontend
      dockerfile: ../docker/frontend/Dockerfile
      args:
        - NODE_ENV=${NODE_ENV:-'production'}
    restart: always
    volumes: #volumes: Always Uses Host Paths, Affected by context? no
      - ./frontend:/app
      - /app/node_modules # for persistent node_modules, this ignores local node_modules and usess the one from the container
    working_dir: /app
    environment:
      - NODE_ENV=${NODE_ENV:-'production'}
    ports:
      - 80:80
    networks:
      - express-permit
    depends_on:
      - api

volumes:
  mongo_data:
networks:
  express-permit:
    driver: bridge